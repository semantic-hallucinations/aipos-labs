# docker-compose up -d

version: '3.8'

services:
  postgres_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      # PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT}:5432"
    volumes:
      # - postgres_data:/var/lib/postgresql/data
       - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  app:
    build: .
    container_name: fastapi_app
    ports:
      - "8000:8000"
    depends_on:
      - postgres_db
    volumes:
      - .:/app
      - ./templates:/app/templates
#     volumes:
#       - ./pgdata:/var/lib/postgresql/data/pgdata
#     deploy:
#       resources:
#         limits:
#           cpus: '0.50'
#           memory: 512M
#         reservations:
#           cpus: '0.25'
#           memory: 256M
#     command: >
#       postgres -c max_connections=1000
#                -c shared_buffers=256MB
#                -c effective_cache_size=768MB
#                -c maintenance_work_mem=64MB
#                -c checkpoint_completion_target=0.7
#                -c wal_buffers=16MB
#                -c default_statistics_target=100
#     healthcheck:
#       test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
#       interval: 30s
#       timeout: 10s
#       retries: 5
#     restart: unless-stopped
#     tty: true
#     stdin_open: true

# volumes:
#   pgdata:
#     driver: local